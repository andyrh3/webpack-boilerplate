
// =============================================================================
// Functions
// =============================================================================

//GENERAL FUNCTIONS

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

//GRADIENT FUNCTIONS

/// Test if `$value` is a valid direction
/// @param {*} $value - Value to test
/// @return {Bool}
@function is-direction($value) {
  $is-keyword: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
  $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));
  @return $is-keyword or $is-angle;
}

/// Convert a direction to legacy syntax
/// @param {Keyword | Angle} $value - Value to convert
/// @require {function} is-direction
/// @require {function} convert-angle
/// @throw Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction.;
@function legacy-direction($value) {
  @if is-direction($value) == false {
    @error "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction.";
  }
  $conversion-map: (
    to top          : bottom,
    to top right    : bottom left,
    to right top    : left bottom,
    to right        : left,
    to bottom right : top left,
    to right bottom : left top,
    to bottom       : top,
    to bottom left  : top right,
    to left bottom  : right top,
    to left         : right,
    to left top     : right bottom,
    to top left     : bottom right
  );
  @if map-has-key($conversion-map, $value) {
    @return map-get($conversion-map, $value);
  }
  @return 90deg - $value;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
    eot: "?",
    svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
    otf: "opentype",
    ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

// =============================================================================
// Helpers
// =============================================================================

//MEDIA BREAKPOINTS

/* Usage
  @include breakpoint(phablet){ width: 100%;}
*/
@mixin breakpoint($point) {
  @if $point == desktop {
    @media (min-width: $desktop-width) { @content ; }
  }
  @else if $point == laptop {
    @media (min-width: $laptop-width) { @content ; }
  }
  @else if $point == tablet {
    @media (min-width: $tablet-width) { @content ; }
  }
  @else if $point == phablet {
    @media (min-width: $phablet-width)  { @content ; }
  }
  @else if $point == mobile {
    @media (min-width: $mobile-width)  { @content ; }
  }
  @else if $point == mobileonly {
    @media (max-width: $mobileonly-width)  { @content ; }
  }
}

//HEADINGS

@mixin heading {
  font-family: ThomasHeadlineCEBold;
  margin-top: 0;
  margin-bottom: 0.35em;
  color: inherit;
}

@mixin heading-1 {
  @include heading;
  font-size: 42px;
  line-height: 48px;
}

@mixin heading-2 {
  @include heading;
  font-size: 24px;
  line-height: 32px;

  /*
  @include breakpoint(phablet){
    font-size: 2.966em;
  }
  */
}

@mixin heading-3 {
  @include heading;
  font-size: 18px;
  line-height: 24px;
}

@mixin heading-4 {
  @include heading;
  font-size: 16px;
  line-height: 22px;
}

@mixin heading-5 {
  @include heading;
  font-size: 14px;
  line-height: 20px;
}

@mixin heading-6 {
  @include heading;
  font-size: 12px;
  line-height: 18px;
}

//CLEAR IT

@mixin clear-it {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
  zoom: 1;
}

//GRADIENTS

/* Usage:
  @include linear-gradient(42deg, #B58234 0%, #D2B545 50%, #D7C04D 50.01%, #FFFFFF 100%);
*/
@mixin linear-gradient($direction, $color-stops...) {
  // Direction has been omitted and happens to be a color-stop
  @if is-direction($direction) == false {
    $color-stops: $direction, $color-stops;
    $direction: 180deg;
  }
  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

@mixin shadow ($horizontalPos : 0px, $verticalPos : 2px, $blur : 12px, $spread : 0px, $shadowColor : rgba(0,0,0,0.3), $inset : null) {
  -webkit-box-shadow: $inset $horizontalPos $verticalPos $blur $spread $shadowColor;
  -moz-box-shadow: $inset $horizontalPos $verticalPos $blur $spread $shadowColor;
  box-shadow: $inset $horizontalPos $verticalPos $blur $spread $shadowColor;
}

/* Usage:
  @include transition(padding 2s ease-out, background 2s ease-out);
*/
@mixin transition($x...) {
  -webkit-transition: $x;
  -moz-transition:    $x;
  -ms-transition:     $x;
  -o-transition:      $x;
  transition:         $x;
}

@mixin list-reset {
  padding: 0;
  margin: 0;
  list-style: none;
  li{
    padding: 0;
    margin: 0;
  }
}

@mixin icon($icon, $color) {
  font-family: '#{$icomoon-font-family}' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  font-size: 20px;
  position: absolute;
  right: 10px;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  color: $color;
  content: "#{$icon}";
}

